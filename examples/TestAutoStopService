package com.allan.services;

import android.content.Context;
import android.content.Intent;
import android.util.Log;

public class MyAutoStopService extends AutoStopService{

    public static void execute(Context context, String type, String info) {
        Intent intent = new Intent(context, MyAutoStopService.class);
        intent.setType(type);
        intent.putExtra("pageName", info);
        context.startService(intent);
    }

    @Override
    protected int executeType(Intent intent) {
        String type = intent.getType();
        if (EXCUTE_TYPE_ASYNC.equals(type)) {
            return EXCUTE_TYPE_DIRECTLY_IN_ExecuteAsync;
        }
        if (EXCUTE_TYPE_MAIN.equals(type)) {
            return EXCUTE_TYPE_IN_MainHandler;
        }
        if (EXCUTE_TYPE_SUB.equals(type)) {
            return EXCUTE_TYPE_DIRECTLY_IN_SubThread;
        }
        return EXCUTE_TYPE_DIRECTLY_IN_OnStartCmd;
    }

    @Override
    protected void onHandleWork(Intent intent, int executeType, int startId) {
        if (executeType == EXCUTE_TYPE_DIRECTLY_IN_ExecuteAsync) {
            new Thread(()->{
                Log.d(TAG, "#" + startId + "：开始一个异步操作...." + intent);
                try {
                    Thread.sleep(3000);
                } catch (InterruptedException e) {
                    e.printStackTrace();
                }
                stopWrap(startId);
                Log.d(TAG, "#" + startId + "：结束一个异步操作并且自己stopWrap");
            }).start();
            //xxNetWorkApi.request().callback(()-> {
            //stopSelfWrap(startId);
            //});
            return;
        }

        if (executeType == EXCUTE_TYPE_DIRECTLY_IN_SubThread) {
            Log.d(TAG, "#" + startId + "：开始一个耗时操作...." + intent);
            try {
                Thread.sleep(2000);
            } catch (InterruptedException e) {
                e.printStackTrace();
            }
            Log.d(TAG, "#" + startId + "：结束一个耗时操作！");

            return;
        }

        Log.d(TAG, "#" + startId + "：直接干完了一件事情" + intent);
    }
}
